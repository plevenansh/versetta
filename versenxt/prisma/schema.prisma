datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  teamMemberships TeamMember[]
  createdProjects Project[]       @relation("ProjectCreator")
  createdTasks    Task[]          @relation("TaskCreator")
  assignedTasks   Task[]          @relation("TaskAssignee")
}

model Team {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  members     TeamMember[]
  projects    Project[]
  tasks       Task[]
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  userId    Int
  teamId    Int
  role      String   // e.g., "admin", "member"
  joinedAt  DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  team      Team     @relation(fields: [teamId], references: [id])

  @@unique([userId, teamId])
  @@index([userId])
  @@index([teamId])
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      String    @default("active")
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teamId      Int
  creatorId   Int
  team        Team      @relation(fields: [teamId], references: [id])
  creator     User      @relation("ProjectCreator", fields: [creatorId], references: [id])
  tasks       Task[]
  members     ProjectMember[]

  @@index([teamId])
  @@index([creatorId])
}

model ProjectMember {
  id        Int     @id @default(autoincrement())
  userId    Int
  projectId Int
  role      String  // e.g., "manager", "contributor"
  user      User    @relation(fields: [userId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
  @@index([userId])
  @@index([projectId])
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      String    @default("pending")
  dueDate     DateTime?
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  projectId   Int?
  teamId      Int?
  creatorId   Int
  assigneeId  Int?
  project     Project?  @relation(fields: [projectId], references: [id])
  team        Team?     @relation(fields: [teamId], references: [id])
  creator     User      @relation("TaskCreator", fields: [creatorId], references: [id])
  assignee    User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])

  @@index([projectId])
  @@index([teamId])
  @@index([creatorId])
  @@index([assigneeId])
}